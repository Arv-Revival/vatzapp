{"version":3,"sources":["views/reports/purchase/index.js"],"names":["PurchaseReport","props","useState","showLoader","setShowLoader","reportList","setreportList","startDate","setStartDate","endDate","setEndDate","JSON","parse","localStorage","getItem","skip","take","gridState","setgridState","reportGridData","setreportGridData","accordionList","setAccordionList","window","innerWidth","windowWidth","setWindowWidth","useEffect","getReports","process","callApi","ApiConstants","purchase","clientpurchasereport","then","response","status_code","payload","showNotification","message","catch","error","Fragment","xl","className","Body","xs","md","placeholderText","dateFormat","selected","onSelect","onChange","type","onClick","dateFilters","push","field","operator","value","moment","format","updatedState","filter","logic","filters","role","data","pageSize","pageable","buttonCount","info","pageSizes","previousNext","onPageChange","event","page","filterable","onFilterChange","title","width","cell","dataIndex","dataItem","invoice_date","defaultActiveKey","length","map","row","style","marginBottom","Toggle","as","Card","Header","backgroundColor","eventKey","id","display","justifyContent","alignItems","color","fontSize","variant","size","Collapse","Item","padding","invoice_number","supplier_name","trn","amount_exclude_vat","amount"],"mappings":"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","file":"static/js/64.c23dd341.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Accordion, Card, ListGroup, Button } from \"react-bootstrap\";\r\nimport { Grid, GridColumn as Column } from \"@progress/kendo-react-grid\";\r\nimport { process } from \"@progress/kendo-data-query\";\r\nimport moment from \"moment\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { FaAngleDown } from \"react-icons/fa\";\r\n\r\nimport { callApi } from \"../../../services/apiService\";\r\nimport { showNotification } from \"../../../services/toasterService\";\r\nimport { ApiConstants } from \"../../../config/apiConstants\";\r\nimport Spinner from \"../../../components/Spinner\";\r\n\r\nconst PurchaseReport = (props) => {\r\n  const [showLoader, setShowLoader] = useState(false);\r\n  const [reportList, setreportList] = useState([]);\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const userObj = JSON.parse(localStorage.getItem(\"user\"));\r\n  const [gridState, setgridState] = useState({ skip: 0, take: 10 });\r\n  const [reportGridData, setreportGridData] = useState(null);\r\n  const [accordionList, setAccordionList] = useState([]);\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n\r\n  const pagerSettings = {\r\n    buttonCount: 5,\r\n    info: true,\r\n    type: \"numeric\",\r\n    pageSizes: true,\r\n    previousNext: true,\r\n  };\r\n\r\n  useEffect(() => {\r\n    getReports();\r\n    setWindowWidth(window.innerWidth > 992);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setreportGridData(process(reportList, gridState));\r\n  }, [reportList, gridState]);\r\n\r\n  const pageChange = (event) => {\r\n    let updatedState = {\r\n      ...gridState,\r\n      skip: event.page.skip,\r\n      take: event.page.take,\r\n    };\r\n    setgridState(updatedState);\r\n  };\r\n\r\n  const filterChange = (event) => {\r\n    let updatedState = { ...gridState, filter: event.filter };\r\n    setgridState(updatedState);\r\n  };\r\n\r\n  const onSearchFilter = () => {\r\n    let dateFilters = [];\r\n    if (startDate) {\r\n      dateFilters.push({ field: \"invoice_date\", operator: \"gte\", value: moment(startDate).format(\"YYYY-MM-DD\") });\r\n    }\r\n    if (endDate) {\r\n      dateFilters.push({ field: \"invoice_date\", operator: \"lte\", value: moment(endDate).format(\"YYYY-MM-DD\") });\r\n    }\r\n    let updatedState = { ...gridState, filter: { logic: \"and\", filters: dateFilters } };\r\n    setgridState(updatedState);\r\n  };\r\n\r\n  const resetFilters = () => {\r\n    let updatedState = { ...gridState, filter: null };\r\n    setgridState(updatedState);\r\n    setStartDate(null);\r\n    setEndDate(null);\r\n  };\r\n\r\n  const getReports = () => {\r\n    setShowLoader(true);\r\n    callApi(\"get\", ApiConstants.purchase.clientpurchasereport, {}, true)\r\n      .then((response) => {\r\n        setShowLoader(false);\r\n        if (response && response.status_code === 200) {\r\n          setreportList(response.payload);\r\n          setAccordionList(response.payload);\r\n        } else {\r\n          showNotification(\"Error\", response.message, \"error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setShowLoader(false);\r\n        showNotification(\"Error\", \"Something went wrong\", \"error\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {showLoader && <Spinner />}\r\n      <Row>\r\n        <Col xl={12}>\r\n          <Card className=\"rounded\">\r\n            <Card.Body className=\"p-4\">\r\n              <Row className=\"mb-3\">\r\n                <Col xs={12} md={4} xl={3}>\r\n                  <div className=\"date-picker-container\">\r\n                    <DatePicker\r\n                      className=\"form-control mb-2\"\r\n                      placeholderText=\"Start Date\"\r\n                      // minDate={new Date(userObj?.period?.start_period_date?.date)}\r\n                      // maxDate={new Date(userObj?.period?.end_period_date?.date)}\r\n                      dateFormat=\"dd/MM/yyyy\"\r\n                      selected={startDate}\r\n                      onSelect={() => setEndDate(null)}\r\n                      onChange={setStartDate}\r\n                    />\r\n                    <i className=\"feather icon-calendar\"></i>\r\n                  </div>\r\n                </Col>\r\n                <Col xs={12} md={4} xl={3}>\r\n                  <div className=\"date-picker-container\">\r\n                    <DatePicker className=\"form-control mb-2\"\r\n                      // minDate={startDate ? startDate : new Date(userObj?.period?.start_period_date?.date)} \r\n                      // maxDate={new Date(userObj?.period?.end_period_date?.date)} \r\n                      placeholderText=\"End Date\" dateFormat=\"dd/MM/yyyy\" selected={endDate} onChange={setEndDate} />\r\n                    <i className=\"feather icon-calendar\"></i>\r\n                  </div>\r\n                </Col>\r\n                <Col xs={10} md={1} xl={1}>\r\n                  <button type=\"button\" className=\"btn-icon btn btn-primary search-button\" onClick={onSearchFilter}>\r\n                    <i className=\"feather icon-search\"></i>\r\n                  </button>\r\n                </Col>\r\n                <Col xs={2} md={1} xl={1}>\r\n                  {(startDate || endDate) && (\r\n                    <div className=\"text-muted filter-close-btn\" role=\"button\" onClick={resetFilters}>\r\n                      <i className=\"feather icon-x\"></i>\r\n                    </div>\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n              {windowWidth && (\r\n                <Grid data={reportGridData} skip={gridState.skip} pageSize={gridState.take} pageable={pagerSettings} onPageChange={pageChange} filterable={true} filter={gridState.filter} onFilterChange={filterChange}>\r\n                  <Column field=\"id\" title=\"#\" width=\"60px\" filterable={false} cell={(props) => <td>{props.dataIndex + 1}</td>} />\r\n                  <Column field=\"invoice_date\" width=\"180\" title=\"Invoice Date\" filterable={false} cell={(props) => <td>{moment(props.dataItem.invoice_date).format(\"DD-MMM-YYYY\")}</td>} />\r\n                  <Column field=\"invoice_number\" width=\"200\" title=\"Invoice Number\" />\r\n                  <Column field=\"supplier_name\" width=\"250\" title=\"Supplier\" />\r\n                  <Column field=\"trn\" width=\"180\" title=\"Supplier TRN\" />\r\n                  <Column field=\"amount_exclude_vat\" width=\"150\" filterable={false} title=\"Amount Excl VAT\" />\r\n                  <Column field=\"vat_amount\" width=\"150\" title=\"VAT\" filterable={false} />\r\n                  <Column field=\"amount\" width=\"150\" title=\"Total\" />\r\n                </Grid>\r\n              )}\r\n\r\n              <div>\r\n                {!windowWidth && (\r\n                  <Accordion defaultActiveKey=\"0\">\r\n                    {accordionList &&\r\n                      accordionList.length > 0 &&\r\n                      accordionList.map((row) => (\r\n                        <Card key={row.id} style={{ marginBottom: 4 }}>\r\n                          <Accordion.Toggle as={Card.Header} style={{ backgroundColor: \"#7599b1\" }} eventKey={row.id}>\r\n                            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                              <span style={{ display: \"flex\", alignItems: \"center\", color: \"#ffffff\", fontSize: 18 }}>{row.invoice_date}</span>\r\n                              <Button variant=\"outline-light\" size=\"sm\">\r\n                                <FaAngleDown />\r\n                              </Button>\r\n                            </div>\r\n                          </Accordion.Toggle>\r\n                          <Accordion.Collapse eventKey={row.id}>\r\n                            <Card.Body>\r\n                              <ListGroup>\r\n                                <ListGroup.Item>\r\n                                  <span style={{ padding: \"0 16px 0 8px\" }}>Invoice Date:</span>\r\n                                  <span>{moment(row.invoice_date).format(\"DD-MMM-YYYY\")}</span>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                  <span style={{ padding: \"0 16px 0 8px\" }}>Invoice Number:</span>\r\n                                  <span>{row.invoice_number}</span>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                  <span style={{ padding: \"0 16px 0 8px\" }}>Supplier:</span>\r\n                                  <span>{row.supplier_name}</span>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                  <span style={{ padding: \"0 16px 0 8px\" }}>Supplier TRN:</span>\r\n                                  <span>{row.trn}</span>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                  <span style={{ padding: \"0 16px 0 8px\" }}>Amount Excl VAT:</span>\r\n                                  <span>{row.amount_exclude_vat}</span>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                  <span style={{ padding: \"0 16px 0 8px\" }}>Total:</span>\r\n                                  <span>{row.amount}</span>\r\n                                </ListGroup.Item>\r\n                              </ListGroup>\r\n                            </Card.Body>\r\n                          </Accordion.Collapse>\r\n                        </Card>\r\n                      ))}\r\n                  </Accordion>\r\n                )}\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PurchaseReport;\r\n"],"sourceRoot":""}